// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/tomvodi/cointracking-export-converter/internal/common"

	mock "github.com/stretchr/testify/mock"
)

// AppContext is an autogenerated mock type for the AppContext type
type AppContext struct {
	mock.Mock
}

type AppContext_Expecter struct {
	mock *mock.Mock
}

func (_m *AppContext) EXPECT() *AppContext_Expecter {
	return &AppContext_Expecter{mock: &_m.Mock}
}

// AddExportFile provides a mock function with given fields: file
func (_m *AppContext) AddExportFile(file *common.ExportFileInfo) {
	_m.Called(file)
}

// AppContext_AddExportFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddExportFile'
type AppContext_AddExportFile_Call struct {
	*mock.Call
}

// AddExportFile is a helper method to define mock.On call
//   - file *common.ExportFileInfo
func (_e *AppContext_Expecter) AddExportFile(file interface{}) *AppContext_AddExportFile_Call {
	return &AppContext_AddExportFile_Call{Call: _e.mock.On("AddExportFile", file)}
}

func (_c *AppContext_AddExportFile_Call) Run(run func(file *common.ExportFileInfo)) *AppContext_AddExportFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*common.ExportFileInfo))
	})
	return _c
}

func (_c *AppContext_AddExportFile_Call) Return() *AppContext_AddExportFile_Call {
	_c.Call.Return()
	return _c
}

func (_c *AppContext_AddExportFile_Call) RunAndReturn(run func(*common.ExportFileInfo)) *AppContext_AddExportFile_Call {
	_c.Call.Return(run)
	return _c
}

// Context provides a mock function with given fields:
func (_m *AppContext) Context() context.Context {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Context")
	}

	var r0 context.Context
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// AppContext_Context_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Context'
type AppContext_Context_Call struct {
	*mock.Call
}

// Context is a helper method to define mock.On call
func (_e *AppContext_Expecter) Context() *AppContext_Context_Call {
	return &AppContext_Context_Call{Call: _e.mock.On("Context")}
}

func (_c *AppContext_Context_Call) Run(run func()) *AppContext_Context_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AppContext_Context_Call) Return(_a0 context.Context) *AppContext_Context_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AppContext_Context_Call) RunAndReturn(run func() context.Context) *AppContext_Context_Call {
	_c.Call.Return(run)
	return _c
}

// ExportFiles provides a mock function with given fields:
func (_m *AppContext) ExportFiles() []*common.ExportFileInfo {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ExportFiles")
	}

	var r0 []*common.ExportFileInfo
	if rf, ok := ret.Get(0).(func() []*common.ExportFileInfo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*common.ExportFileInfo)
		}
	}

	return r0
}

// AppContext_ExportFiles_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExportFiles'
type AppContext_ExportFiles_Call struct {
	*mock.Call
}

// ExportFiles is a helper method to define mock.On call
func (_e *AppContext_Expecter) ExportFiles() *AppContext_ExportFiles_Call {
	return &AppContext_ExportFiles_Call{Call: _e.mock.On("ExportFiles")}
}

func (_c *AppContext_ExportFiles_Call) Run(run func()) *AppContext_ExportFiles_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AppContext_ExportFiles_Call) Return(_a0 []*common.ExportFileInfo) *AppContext_ExportFiles_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AppContext_ExportFiles_Call) RunAndReturn(run func() []*common.ExportFileInfo) *AppContext_ExportFiles_Call {
	_c.Call.Return(run)
	return _c
}

// LastSelectedFileDir provides a mock function with given fields:
func (_m *AppContext) LastSelectedFileDir() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for LastSelectedFileDir")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// AppContext_LastSelectedFileDir_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LastSelectedFileDir'
type AppContext_LastSelectedFileDir_Call struct {
	*mock.Call
}

// LastSelectedFileDir is a helper method to define mock.On call
func (_e *AppContext_Expecter) LastSelectedFileDir() *AppContext_LastSelectedFileDir_Call {
	return &AppContext_LastSelectedFileDir_Call{Call: _e.mock.On("LastSelectedFileDir")}
}

func (_c *AppContext_LastSelectedFileDir_Call) Run(run func()) *AppContext_LastSelectedFileDir_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AppContext_LastSelectedFileDir_Call) Return(_a0 string) *AppContext_LastSelectedFileDir_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AppContext_LastSelectedFileDir_Call) RunAndReturn(run func() string) *AppContext_LastSelectedFileDir_Call {
	_c.Call.Return(run)
	return _c
}

// SetContext provides a mock function with given fields: ctx
func (_m *AppContext) SetContext(ctx context.Context) {
	_m.Called(ctx)
}

// AppContext_SetContext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetContext'
type AppContext_SetContext_Call struct {
	*mock.Call
}

// SetContext is a helper method to define mock.On call
//   - ctx context.Context
func (_e *AppContext_Expecter) SetContext(ctx interface{}) *AppContext_SetContext_Call {
	return &AppContext_SetContext_Call{Call: _e.mock.On("SetContext", ctx)}
}

func (_c *AppContext_SetContext_Call) Run(run func(ctx context.Context)) *AppContext_SetContext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *AppContext_SetContext_Call) Return() *AppContext_SetContext_Call {
	_c.Call.Return()
	return _c
}

func (_c *AppContext_SetContext_Call) RunAndReturn(run func(context.Context)) *AppContext_SetContext_Call {
	_c.Call.Return(run)
	return _c
}

// SetLastSelectedFileDirFromFile provides a mock function with given fields: filepath
func (_m *AppContext) SetLastSelectedFileDirFromFile(filepath string) {
	_m.Called(filepath)
}

// AppContext_SetLastSelectedFileDirFromFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetLastSelectedFileDirFromFile'
type AppContext_SetLastSelectedFileDirFromFile_Call struct {
	*mock.Call
}

// SetLastSelectedFileDirFromFile is a helper method to define mock.On call
//   - filepath string
func (_e *AppContext_Expecter) SetLastSelectedFileDirFromFile(filepath interface{}) *AppContext_SetLastSelectedFileDirFromFile_Call {
	return &AppContext_SetLastSelectedFileDirFromFile_Call{Call: _e.mock.On("SetLastSelectedFileDirFromFile", filepath)}
}

func (_c *AppContext_SetLastSelectedFileDirFromFile_Call) Run(run func(filepath string)) *AppContext_SetLastSelectedFileDirFromFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *AppContext_SetLastSelectedFileDirFromFile_Call) Return() *AppContext_SetLastSelectedFileDirFromFile_Call {
	_c.Call.Return()
	return _c
}

func (_c *AppContext_SetLastSelectedFileDirFromFile_Call) RunAndReturn(run func(string)) *AppContext_SetLastSelectedFileDirFromFile_Call {
	_c.Call.Return(run)
	return _c
}

// NewAppContext creates a new instance of AppContext. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAppContext(t interface {
	mock.TestingT
	Cleanup(func())
}) *AppContext {
	mock := &AppContext{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
