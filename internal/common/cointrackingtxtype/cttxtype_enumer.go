// Code generated by "enumer -json -yaml -transform=snake -type=CtTxType"; DO NOT EDIT.

package cointrackingtxtype

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _CtTxTypeName = "no_ct_tx_typetrademargin_tradederivatives_futures_tradedepositincomegift_tipreward_bonusminingairdropairdrop_non_taxablestakingmasternodemintingmining_commercialdividends_incomelending_incomeinterest_incomederivatives_futures_profitmargin_profitother_incomeincome_non_taxableremove_liquidityreceive_lp_tokenlp_rewardswithdrawalspenddonationgiftstolenlostborrowing_feesettlement_feemargin_lossmargin_feederivatives_futures_lossother_feeother_expenseprovide_liquidityreturn_lp_tokenexpense_non_taxableswap_non_taxablereceive_loanreceive_collateralsend_collateralrepay_loanliquidation"

var _CtTxTypeIndex = [...]uint16{0, 13, 18, 30, 55, 62, 68, 76, 88, 94, 101, 120, 127, 137, 144, 161, 177, 191, 206, 232, 245, 257, 275, 291, 307, 317, 327, 332, 340, 344, 350, 354, 367, 381, 392, 402, 426, 435, 448, 465, 480, 499, 515, 527, 545, 560, 570, 581}

const _CtTxTypeLowerName = "no_ct_tx_typetrademargin_tradederivatives_futures_tradedepositincomegift_tipreward_bonusminingairdropairdrop_non_taxablestakingmasternodemintingmining_commercialdividends_incomelending_incomeinterest_incomederivatives_futures_profitmargin_profitother_incomeincome_non_taxableremove_liquidityreceive_lp_tokenlp_rewardswithdrawalspenddonationgiftstolenlostborrowing_feesettlement_feemargin_lossmargin_feederivatives_futures_lossother_feeother_expenseprovide_liquidityreturn_lp_tokenexpense_non_taxableswap_non_taxablereceive_loanreceive_collateralsend_collateralrepay_loanliquidation"

func (i CtTxType) String() string {
	if i >= CtTxType(len(_CtTxTypeIndex)-1) {
		return fmt.Sprintf("CtTxType(%d)", i)
	}
	return _CtTxTypeName[_CtTxTypeIndex[i]:_CtTxTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _CtTxTypeNoOp() {
	var x [1]struct{}
	_ = x[NoCtTxType-(0)]
	_ = x[Trade-(1)]
	_ = x[MarginTrade-(2)]
	_ = x[DerivativesFuturesTrade-(3)]
	_ = x[Deposit-(4)]
	_ = x[Income-(5)]
	_ = x[GiftTip-(6)]
	_ = x[RewardBonus-(7)]
	_ = x[Mining-(8)]
	_ = x[Airdrop-(9)]
	_ = x[AirdropNonTaxable-(10)]
	_ = x[Staking-(11)]
	_ = x[Masternode-(12)]
	_ = x[Minting-(13)]
	_ = x[MiningCommercial-(14)]
	_ = x[DividendsIncome-(15)]
	_ = x[LendingIncome-(16)]
	_ = x[InterestIncome-(17)]
	_ = x[DerivativesFuturesProfit-(18)]
	_ = x[MarginProfit-(19)]
	_ = x[OtherIncome-(20)]
	_ = x[IncomeNonTaxable-(21)]
	_ = x[RemoveLiquidity-(22)]
	_ = x[ReceiveLpToken-(23)]
	_ = x[LpRewards-(24)]
	_ = x[Withdrawal-(25)]
	_ = x[Spend-(26)]
	_ = x[Donation-(27)]
	_ = x[Gift-(28)]
	_ = x[Stolen-(29)]
	_ = x[Lost-(30)]
	_ = x[BorrowingFee-(31)]
	_ = x[SettlementFee-(32)]
	_ = x[MarginLoss-(33)]
	_ = x[MarginFee-(34)]
	_ = x[DerivativesFuturesLoss-(35)]
	_ = x[OtherFee-(36)]
	_ = x[OtherExpense-(37)]
	_ = x[ProvideLiquidity-(38)]
	_ = x[ReturnLpToken-(39)]
	_ = x[ExpenseNonTaxable-(40)]
	_ = x[SwapNonTaxable-(41)]
	_ = x[ReceiveLoan-(42)]
	_ = x[ReceiveCollateral-(43)]
	_ = x[SendCollateral-(44)]
	_ = x[RepayLoan-(45)]
	_ = x[Liquidation-(46)]
}

var _CtTxTypeValues = []CtTxType{NoCtTxType, Trade, MarginTrade, DerivativesFuturesTrade, Deposit, Income, GiftTip, RewardBonus, Mining, Airdrop, AirdropNonTaxable, Staking, Masternode, Minting, MiningCommercial, DividendsIncome, LendingIncome, InterestIncome, DerivativesFuturesProfit, MarginProfit, OtherIncome, IncomeNonTaxable, RemoveLiquidity, ReceiveLpToken, LpRewards, Withdrawal, Spend, Donation, Gift, Stolen, Lost, BorrowingFee, SettlementFee, MarginLoss, MarginFee, DerivativesFuturesLoss, OtherFee, OtherExpense, ProvideLiquidity, ReturnLpToken, ExpenseNonTaxable, SwapNonTaxable, ReceiveLoan, ReceiveCollateral, SendCollateral, RepayLoan, Liquidation}

var _CtTxTypeNameToValueMap = map[string]CtTxType{
	_CtTxTypeName[0:13]:         NoCtTxType,
	_CtTxTypeLowerName[0:13]:    NoCtTxType,
	_CtTxTypeName[13:18]:        Trade,
	_CtTxTypeLowerName[13:18]:   Trade,
	_CtTxTypeName[18:30]:        MarginTrade,
	_CtTxTypeLowerName[18:30]:   MarginTrade,
	_CtTxTypeName[30:55]:        DerivativesFuturesTrade,
	_CtTxTypeLowerName[30:55]:   DerivativesFuturesTrade,
	_CtTxTypeName[55:62]:        Deposit,
	_CtTxTypeLowerName[55:62]:   Deposit,
	_CtTxTypeName[62:68]:        Income,
	_CtTxTypeLowerName[62:68]:   Income,
	_CtTxTypeName[68:76]:        GiftTip,
	_CtTxTypeLowerName[68:76]:   GiftTip,
	_CtTxTypeName[76:88]:        RewardBonus,
	_CtTxTypeLowerName[76:88]:   RewardBonus,
	_CtTxTypeName[88:94]:        Mining,
	_CtTxTypeLowerName[88:94]:   Mining,
	_CtTxTypeName[94:101]:       Airdrop,
	_CtTxTypeLowerName[94:101]:  Airdrop,
	_CtTxTypeName[101:120]:      AirdropNonTaxable,
	_CtTxTypeLowerName[101:120]: AirdropNonTaxable,
	_CtTxTypeName[120:127]:      Staking,
	_CtTxTypeLowerName[120:127]: Staking,
	_CtTxTypeName[127:137]:      Masternode,
	_CtTxTypeLowerName[127:137]: Masternode,
	_CtTxTypeName[137:144]:      Minting,
	_CtTxTypeLowerName[137:144]: Minting,
	_CtTxTypeName[144:161]:      MiningCommercial,
	_CtTxTypeLowerName[144:161]: MiningCommercial,
	_CtTxTypeName[161:177]:      DividendsIncome,
	_CtTxTypeLowerName[161:177]: DividendsIncome,
	_CtTxTypeName[177:191]:      LendingIncome,
	_CtTxTypeLowerName[177:191]: LendingIncome,
	_CtTxTypeName[191:206]:      InterestIncome,
	_CtTxTypeLowerName[191:206]: InterestIncome,
	_CtTxTypeName[206:232]:      DerivativesFuturesProfit,
	_CtTxTypeLowerName[206:232]: DerivativesFuturesProfit,
	_CtTxTypeName[232:245]:      MarginProfit,
	_CtTxTypeLowerName[232:245]: MarginProfit,
	_CtTxTypeName[245:257]:      OtherIncome,
	_CtTxTypeLowerName[245:257]: OtherIncome,
	_CtTxTypeName[257:275]:      IncomeNonTaxable,
	_CtTxTypeLowerName[257:275]: IncomeNonTaxable,
	_CtTxTypeName[275:291]:      RemoveLiquidity,
	_CtTxTypeLowerName[275:291]: RemoveLiquidity,
	_CtTxTypeName[291:307]:      ReceiveLpToken,
	_CtTxTypeLowerName[291:307]: ReceiveLpToken,
	_CtTxTypeName[307:317]:      LpRewards,
	_CtTxTypeLowerName[307:317]: LpRewards,
	_CtTxTypeName[317:327]:      Withdrawal,
	_CtTxTypeLowerName[317:327]: Withdrawal,
	_CtTxTypeName[327:332]:      Spend,
	_CtTxTypeLowerName[327:332]: Spend,
	_CtTxTypeName[332:340]:      Donation,
	_CtTxTypeLowerName[332:340]: Donation,
	_CtTxTypeName[340:344]:      Gift,
	_CtTxTypeLowerName[340:344]: Gift,
	_CtTxTypeName[344:350]:      Stolen,
	_CtTxTypeLowerName[344:350]: Stolen,
	_CtTxTypeName[350:354]:      Lost,
	_CtTxTypeLowerName[350:354]: Lost,
	_CtTxTypeName[354:367]:      BorrowingFee,
	_CtTxTypeLowerName[354:367]: BorrowingFee,
	_CtTxTypeName[367:381]:      SettlementFee,
	_CtTxTypeLowerName[367:381]: SettlementFee,
	_CtTxTypeName[381:392]:      MarginLoss,
	_CtTxTypeLowerName[381:392]: MarginLoss,
	_CtTxTypeName[392:402]:      MarginFee,
	_CtTxTypeLowerName[392:402]: MarginFee,
	_CtTxTypeName[402:426]:      DerivativesFuturesLoss,
	_CtTxTypeLowerName[402:426]: DerivativesFuturesLoss,
	_CtTxTypeName[426:435]:      OtherFee,
	_CtTxTypeLowerName[426:435]: OtherFee,
	_CtTxTypeName[435:448]:      OtherExpense,
	_CtTxTypeLowerName[435:448]: OtherExpense,
	_CtTxTypeName[448:465]:      ProvideLiquidity,
	_CtTxTypeLowerName[448:465]: ProvideLiquidity,
	_CtTxTypeName[465:480]:      ReturnLpToken,
	_CtTxTypeLowerName[465:480]: ReturnLpToken,
	_CtTxTypeName[480:499]:      ExpenseNonTaxable,
	_CtTxTypeLowerName[480:499]: ExpenseNonTaxable,
	_CtTxTypeName[499:515]:      SwapNonTaxable,
	_CtTxTypeLowerName[499:515]: SwapNonTaxable,
	_CtTxTypeName[515:527]:      ReceiveLoan,
	_CtTxTypeLowerName[515:527]: ReceiveLoan,
	_CtTxTypeName[527:545]:      ReceiveCollateral,
	_CtTxTypeLowerName[527:545]: ReceiveCollateral,
	_CtTxTypeName[545:560]:      SendCollateral,
	_CtTxTypeLowerName[545:560]: SendCollateral,
	_CtTxTypeName[560:570]:      RepayLoan,
	_CtTxTypeLowerName[560:570]: RepayLoan,
	_CtTxTypeName[570:581]:      Liquidation,
	_CtTxTypeLowerName[570:581]: Liquidation,
}

var _CtTxTypeNames = []string{
	_CtTxTypeName[0:13],
	_CtTxTypeName[13:18],
	_CtTxTypeName[18:30],
	_CtTxTypeName[30:55],
	_CtTxTypeName[55:62],
	_CtTxTypeName[62:68],
	_CtTxTypeName[68:76],
	_CtTxTypeName[76:88],
	_CtTxTypeName[88:94],
	_CtTxTypeName[94:101],
	_CtTxTypeName[101:120],
	_CtTxTypeName[120:127],
	_CtTxTypeName[127:137],
	_CtTxTypeName[137:144],
	_CtTxTypeName[144:161],
	_CtTxTypeName[161:177],
	_CtTxTypeName[177:191],
	_CtTxTypeName[191:206],
	_CtTxTypeName[206:232],
	_CtTxTypeName[232:245],
	_CtTxTypeName[245:257],
	_CtTxTypeName[257:275],
	_CtTxTypeName[275:291],
	_CtTxTypeName[291:307],
	_CtTxTypeName[307:317],
	_CtTxTypeName[317:327],
	_CtTxTypeName[327:332],
	_CtTxTypeName[332:340],
	_CtTxTypeName[340:344],
	_CtTxTypeName[344:350],
	_CtTxTypeName[350:354],
	_CtTxTypeName[354:367],
	_CtTxTypeName[367:381],
	_CtTxTypeName[381:392],
	_CtTxTypeName[392:402],
	_CtTxTypeName[402:426],
	_CtTxTypeName[426:435],
	_CtTxTypeName[435:448],
	_CtTxTypeName[448:465],
	_CtTxTypeName[465:480],
	_CtTxTypeName[480:499],
	_CtTxTypeName[499:515],
	_CtTxTypeName[515:527],
	_CtTxTypeName[527:545],
	_CtTxTypeName[545:560],
	_CtTxTypeName[560:570],
	_CtTxTypeName[570:581],
}

// CtTxTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CtTxTypeString(s string) (CtTxType, error) {
	if val, ok := _CtTxTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _CtTxTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CtTxType values", s)
}

// CtTxTypeValues returns all values of the enum
func CtTxTypeValues() []CtTxType {
	return _CtTxTypeValues
}

// CtTxTypeStrings returns a slice of all String values of the enum
func CtTxTypeStrings() []string {
	strs := make([]string, len(_CtTxTypeNames))
	copy(strs, _CtTxTypeNames)
	return strs
}

// IsACtTxType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CtTxType) IsACtTxType() bool {
	for _, v := range _CtTxTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for CtTxType
func (i CtTxType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for CtTxType
func (i *CtTxType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CtTxType should be a string, got %s", data)
	}

	var err error
	*i, err = CtTxTypeString(s)
	return err
}

// MarshalYAML implements a YAML Marshaler for CtTxType
func (i CtTxType) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for CtTxType
func (i *CtTxType) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = CtTxTypeString(s)
	return err
}
